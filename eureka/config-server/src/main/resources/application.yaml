#
server:
  port: 6001
# 应用自定义配置 logback
logging:
  config: classpath:logback-config.xml
spring:
  application:
    name: config-server
  profiles:
    active: dev
  cloud:
    stream:
      # 指定用kafka stream来作为默认消息中间件
      default-binder: kafka
      kafka:
        # 来自 KafkaBinderConfigurationProperties
        binder:
          brokers: ci-server:9092,ci-server:9093,ci-server:9094
          # 如果需要传递自定义header信息，需要在此处声明，不然自定义消息头是不会出现在最终消息当中的
          # headers: myType
          configuration:
            auto:
              offset:
              # 可以设置原生kafka属性，比如设置新的消费组从最新的offset开始消费
              reset: latest
    config:
      server:

        native:
          # 本地文件存放位置
          search-locations: classpath:/,classpath:/config/,file:./,file:./config/
        svn:
         uri: file:///path/to/svn/repo
         order: 2
        git:
          # Git 仓库地址
          uri: https://github.com/chenshun131/springcloud-config
          # 默认访问分支
          default-label: master
          # 仓库路径下的相对搜索位置，可以配置多个
          search-paths: /demo
          force-pull: true
          basedir: /opt/datas/reposity
          username: xxxx
          password: xxxx
          repos:
            team-a:
              pattern: team-a-*
              cloneOnStart: true
              uri: http://git/team-a/config-repo.git
              default-label: master
              # 仓库路径下的相对搜索位置，可以配置多个
              search-paths: /demo
              username: xxxx
              password: xxxx
            team-b:
              pattern: team-b-*
              cloneOnStart: false
              uri: http://git/team-b/config-repo.git
              default-label: master
              # 仓库路径下的相对搜索位置，可以配置多个
              search-paths: /demo
              username: xxxx
              password: xxxx
            team-c:
              pattern: team-c-*
              uri: http://git/team-a/config-repo.git
              default-label: master
              # 仓库路径下的相对搜索位置，可以配置多个
              search-paths: /demo
              username: xxxx
              password: xxxx
#
eureka:
  client:
    service-url:
      defaultZone: http://peer1:1111/eureka/,http://peer2:2222/eureka/
    fetch-registry: true
    registry-fetch-interval-seconds: 30
#
management:
  endpoints:
    web:
      exposure:
        # 端外暴露的端点，使用 "*" 表示暴露所有的端点，bus-refresh 默认是不暴露的
        include: "*"
        exclude: env,beans
