<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!-- 数据库驱动包位置 -->
    <!-- <classPathEntry location="D:\software\lib\mysql-connector-java-5.1.21.jar" /> -->
    <classPathEntry location="/Users/chenshun131/.m2/repository/mysql/mysql-connector-java/5.1.9/mysql-connector-java-5.1.9.jar"/>

    <!-- id:数据库方言 -->
    <context id="mysqlGen" targetRuntime="MyBatis3">
        <property name="javaFileEncoding" value="UTF-8"/>

        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <!-- 是否去除自动生成的注释.true:是;false:否 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- 数据库链接URL、用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://ci-server:3306/dev" userId="root" password="123456">
            <!-- <jdbcConnection driverClass="oracle.jdbc.driver.OracleDriver" connectionURL="jdbc:oracle:thin:@localhost:1521:orcl" userId="msa" password="msa"> -->
        </jdbcConnection>

        <!-- default false
             Java type resolver will always use java.math.BigDecimal if the database column is of type DECIMAL or NUMERIC. -->
        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成模型的包名和位置
             指定包名以及生成的目标地址(可以自定义地址,但是路径不存在不会自动创建 .使用MAVEN将默认生成在target目录下,会自动创建路径 targetProject="MAVEN") -->
        <javaModelGenerator targetPackage="sy.model" targetProject="MAVEN">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 生成的映射文件包名和位置
             指定包名以及生成的目标地址(可以自定义地址,但是路径不存在不会自动创建 .使用MAVEN将默认生成在target目录下,会自动创建路径) -->
        <sqlMapGenerator targetPackage="sy.mapping" targetProject="MAVEN">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!--
            生成DAO的包名和位置
            指定包名以及生成的目标地址(可以自定义地址,但是路径不存在不会自动创建 .使用MAVEN将默认生成在target目录下,会自动创建路径)
          -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="sy.dao" targetProject="MAVEN">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!-- 要生成那些表(更改tableName和domainObjectName就可以，对于后面几个属性可以防止产生其他不需要的配置) -->
        <table tableName="good_infos" domainObjectName="GoodInfos"
               enableCountByExample="false"
               enableUpdateByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               selectByExampleQueryId="false"/>
        <table tableName="good_types" domainObjectName="GoodTypes"
               enableCountByExample="false"
               enableUpdateByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               selectByExampleQueryId="false"/>
    </context>
</generatorConfiguration>
